knitr::opts_chunk$set(echo = TRUE)
boxplot(`Snout Vent Length (cm)` ~ Gender,
data = T6.19,
col = c("lightblue", "lightgreen"),
main = "Snout Vent Length by Gender",
ylab = "Length (cm)")
knitr::opts_chunk$set(echo = TRUE)
library(st514)
data("T6-19")
T6.19 <- tbl
colnames(T6.19) <- c("Snout Vent Length (cm)", "Weight (kg)", "Gender")
levels(T6.19$Gender)
levels(T6.19$Gender) <- c("Female", "Male")
T6.19
# Dimensioner
dim(T6.19)
#Variabeltyper
str(T6.19)
#Sammendrag
summary(T6.19)
# Check if the data is normally distributed
qqnorm(T6.19$`Snout Vent Length (cm)`,
main = "Q-Q Plot",
xlab = "Theoretical Quantiles",
ylab = "Snout Vent Length (cm)",
pch = 19,
col = "blue")
qqline(T6.19$`Snout Vent Length (cm)`, col = "red")
qqnorm(T6.19$`Weight (kg)`,
main = "Q-Q Plot",
xlab = "Theoretical Quantiles",
ylab = "Weight (kg)",
pch = 19,
col = "blue")
qqline(T6.19$`Weight (kg)`, col = "red")
boxplot(`Snout Vent Length (cm)` ~ Gender,
data = T6.19,
col = c("lightblue", "lightgreen"),
main = "Snout Vent Length by Gender",
ylab = "Length (cm)")
boxplot(`Weight (kg)` ~ Gender,
data = T6.19,
col = c("lightblue", "lightgreen"),
main = "Weight by Gender",
ylab = "Weight (kg)")
pairs(T6.19[, 1:2],
main = "Scatterplot Matrix: Length and Weight",
pch = 21,
bg = c("lightpink", "lightblue")[T6.19$Gender])
library(car)
qqPlot(T6.19$`Snout Vent Length (cm)`[T6.19$Gender == "Female"],
main = "QQ-plot: Snout Length (Female)")
qqPlot(T6.19$`Snout Vent Length (cm)`[T6.19$Gender == "Male"],
main = "QQ-plot: Snout Length (Male)")
library(car)
qqPlot(T6.19$`Weight (kilos)`[T6.19$Gender == "Female"],
main = "QQ-plot: Snout Length (Female)")
library(car)
qqPlot(T6.19$`weight (kilos)`[T6.19$Gender == "Female"],
main = "QQ-plot: Snout Length (Female)")
# QQ-plot af Weight for Female
qqPlot(T6.19$`Weight (kg)`[T6.19$Gender == "Female"],
main = "QQ-plot: Weight (Female)",
ylab = "Weight (kg)")
# QQ-plot af Weight for Male
qqPlot(T6.19$`Weight (kg)`[T6.19$Gender == "Male"],
main = "QQ-plot: Weight (Male)",
ylab = "Weight (kg)")
library(MASS)
# Udtræk kun numeriske variabler
X <- T6.19[, 1:2]
# Beregn Mahalanobis afstande
center <- colMeans(X)
cov_mat <- cov(X)
md <- mahalanobis(X, center, cov_mat)
# Q-Q plot af D² værdier mod chi²
qqplot(qchisq(ppoints(nrow(X)), df = 2), md,
main = "Q-Q Plot of Mahalanobis Distances",
xlab = "Theoretical Quantiles (Chi-squared df=2)",
ylab = "Observed Mahalanobis Distances")
abline(0, 1, col = "red")
# Kvinder
female_length <- T6.19$`Snout Vent Length (cm)`[T6.19$Gender == "Female"]
male_length   <- T6.19$`Snout Vent Length (cm)`[T6.19$Gender == "Male"]
# Tæthedskurver
plot(density(female_length),
main = "Density Plot: Snout Length by Gender",
xlab = "Snout Vent Length (cm)",
col = "red", lwd = 2, ylim = c(0, 0.025))
lines(density(male_length), col = "blue", lwd = 2)
# Normalfordelingskurver (for sammenligning)
x_vals <- seq(min(T6.19$`Snout Vent Length (cm)`), max(T6.19$`Snout Vent Length (cm)`), length = 100)
lines(x_vals, dnorm(x_vals, mean = mean(female_length), sd = sd(female_length)),
col = "red", lty = 2)
lines(x_vals, dnorm(x_vals, mean = mean(male_length), sd = sd(male_length)),
col = "blue", lty = 2)
legend("topright", legend = c("Female", "Male"), col = c("red", "blue"), lwd = 2)
female_weight <- T6.19$`Weight (kg)`[T6.19$Gender == "Female"]
male_weight   <- T6.19$`Weight (kg)`[T6.19$Gender == "Male"]
# Tæthedskurver
plot(density(female_weight),
main = "Density Plot: Weight by Gender",
xlab = "Weight (kg)",
col = "red", lwd = 2, ylim = c(0, 0.12))
lines(density(male_weight), col = "blue", lwd = 2)
# Normalfordelingskurver (for sammenligning)
x_vals <- seq(min(T6.19$`Weight (kg)`), max(T6.19$`Weight (kg)`), length = 100)
lines(x_vals, dnorm(x_vals, mean = mean(female_weight), sd = sd(female_weight)),
col = "red", lty = 2)
lines(x_vals, dnorm(x_vals, mean = mean(male_weight), sd = sd(male_weight)),
col = "blue", lty = 2)
legend("topright", legend = c("Female", "Male"), col = c("red", "blue"), lwd = 2)
knitr::opts_chunk$set(echo = TRUE)
library(st514)
# Indlæsning af data
data("T6-19")
T6.19 <- tbl
T6.19
colnames(T6.19) <- c("Snout Vent Length (cm)", "Weight (kg)", "Gender")
levels(T6.19$Gender) <- c("Female", "Male")
T6.19
mean(T6.19$"Snout Vent Length (cm)")
mean(T6.19$"Weight (kg)")
# Variance of x1 (using n divisor)
var(T6.19$"Snout Vent Length (cm)") * (nrow(T6.19) - 1) / nrow(T6.19)
# Variance of x2 (using n divisor)
var(T6.19$"Weight (kg)") * (nrow(T6.19) - 1) / nrow(T6.19)
# Covariance between x1 and x2 (using n divisor)
cov(T6.19$"Snout Vent Length (cm)", T6.19$"Weight (kg)") * (nrow(T6.19) - 1) / nrow(T6.19)
# Correlation between x1 and x2
cor(T6.19$"Snout Vent Length (cm)", T6.19$"Weight (kg)")
# Create a scatterplot with a marginal dot plot for the variables x1 and x2
marginal.dot.plot(T6.19$"Snout Vent Length (cm)", T6.19$"Weight (kg)", xlab = expression("Snout Vent Length (cm) x"[1]), ylab = expression("Weight (kg) x"[2]))
# Variance-covariance matrix:
#create t6.19 nuerical withouht column gender
T6.19_numerical <- T6.19[, 1:2]
#print(round(cov(T6.19_numerical) * (nrow(T6.19) - 1) / nrow(T6.19)),3)
print(round(cov(T6.19_numerical) * (nrow(T6.19) - 1) / nrow(T6.19), digits=3))
# Find standardafvigelser (kvadratrod af diagonale værdier i varians-kovarians-matrixen)
vcov_matrix <- cov(T6.19_numerical) * (nrow(T6.19) - 1) / nrow(T6.19)
# Træk diagonalen ud (varians for hver variabel), og tag kvadratroden
std_devs <- sqrt(diag(vcov_matrix))
# Udskriv med beskrivende tekst
cat("Standardafvigelser (√varians):\n")
print(round(std_devs, 2))
# Dimensioner
dim(T6.19)
#Variabeltyper
str(T6.19)
#Sammendrag
summary(T6.19)
colnames(T6.19_obs)
library(tidyr)
library(dplyr)
library(ggplot2)
# Tilføj Gender label
gender <- c(rep("Female", 5), rep("Male", 5))
ID <- factor(paste0("Obs", 1:10), levels = paste0("Obs", 1:10))
# ---- SNOUT ----
df_snout <- data.frame(
ID = ID,
Gender = gender,
Mean = as.vector(snout_mean),
Treatment = as.vector(snout_treatment),
Residual = as.vector(snout_residual)
) %>%
pivot_longer(cols = c("Mean", "Treatment", "Residual"),
names_to = "Component", values_to = "Value") %>%
mutate(Component = factor(Component, levels = c("Mean", "Treatment", "Residual")))
knitr::opts_chunk$set(echo = TRUE)
library(st514)
# Indlæsning af data
data("T6-19")
T6.19 <- tbl
T6.19
colnames(T6.19) <- c("Snout Vent Length (cm)", "Weight (kg)", "Gender")
levels(T6.19$Gender) <- c("Female", "Male")
T6.19
mean(T6.19$"Snout Vent Length (cm)")
mean(T6.19$"Weight (kg)")
# Variance of x1 (using n divisor)
var(T6.19$"Snout Vent Length (cm)") * (nrow(T6.19) - 1) / nrow(T6.19)
# Variance of x2 (using n divisor)
var(T6.19$"Weight (kg)") * (nrow(T6.19) - 1) / nrow(T6.19)
# Covariance between x1 and x2 (using n divisor)
cov(T6.19$"Snout Vent Length (cm)", T6.19$"Weight (kg)") * (nrow(T6.19) - 1) / nrow(T6.19)
# Correlation between x1 and x2
cor(T6.19$"Snout Vent Length (cm)", T6.19$"Weight (kg)")
# Create a scatterplot with a marginal dot plot for the variables x1 and x2
marginal.dot.plot(T6.19$"Snout Vent Length (cm)", T6.19$"Weight (kg)", xlab = expression("Snout Vent Length (cm) x"[1]), ylab = expression("Weight (kg) x"[2]))
# Variance-covariance matrix:
#create t6.19 nuerical withouht column gender
T6.19_numerical <- T6.19[, 1:2]
#print(round(cov(T6.19_numerical) * (nrow(T6.19) - 1) / nrow(T6.19)),3)
print(round(cov(T6.19_numerical) * (nrow(T6.19) - 1) / nrow(T6.19), digits=3))
# Find standardafvigelser (kvadratrod af diagonale værdier i varians-kovarians-matrixen)
vcov_matrix <- cov(T6.19_numerical) * (nrow(T6.19) - 1) / nrow(T6.19)
# Træk diagonalen ud (varians for hver variabel), og tag kvadratroden
std_devs <- sqrt(diag(vcov_matrix))
# Udskriv med beskrivende tekst
cat("Standardafvigelser (√varians):\n")
print(round(std_devs, 2))
# Dimensioner
dim(T6.19)
#Variabeltyper
str(T6.19)
#Sammendrag
summary(T6.19)
colnames(T6.19_obs)
colnames(T6.19_obs)
colnames(T6.19_obs)
library(dplyr)
library(tidyr)
library(ggplot2)
# Tilføj et unikt ID til hver observation
T6.19_obs <- T6.19 %>%
mutate(Obs = paste0("Obs", row_number()))
# Gør dataen lang for Snout og Weight
T6.19_long <- T6.19_obs %>%
dplyr::select(`Obs`, `Gender`, `Snout Vent Length (cm)`, `Weight (kg)`) %>%
pivot_longer(cols = c(`Snout Vent Length (cm)`, `Weight (kg)`),
names_to = "Variable", values_to = "Value")
# Standardiser variabelnavne lidt for pænere labels
library(stringr)
T6.19_long$Variable <- str_replace_all(T6.19_long$Variable,
c("Snout Vent Length \\(cm\\)" = "Snout Length",
"Weight \\(kg\\)" = "Weight"))
# Plot: Hver søjle er én observation
ggplot(T6.19_long, aes(x = Obs, y = Value, fill = Gender)) +
geom_bar(stat = "identity") +
facet_wrap(~ Variable, scales = "free_y") +
labs(
title = "Snout Length og Weight for alle observationer",
x = "Observationer", y = "Værdi"
) +
scale_fill_manual(values = c("Female" = "#F8766D", "Male" = "#619CFF")) +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
# Tilføj numerisk ID og behold som karakter for rækkefølge
T6.19_obs <- T6.19 %>%
mutate(Obs = row_number())
# Gør data lang
T6.19_long <- T6.19_obs %>%
dplyr::select(Obs, Gender, `Snout Vent Length (cm)`, `Weight (kg)`) %>%
pivot_longer(cols = c(`Snout Vent Length (cm)`, `Weight (kg)`),
names_to = "Variable", values_to = "Value")
# Standardiser navne
T6.19_long$Variable <- str_replace_all(T6.19_long$Variable,
c("Snout Vent Length \\(cm\\)" = "Snout Length",
"Weight \\(kg\\)" = "Weight"))
# Gør Obs til faktor for rækkefølge
T6.19_long$Obs <- factor(T6.19_long$Obs, levels = 1:56)
# Kombiner observation og variabel til unik bar (bruges ikke i plot her men gemmes til evt. brug)
T6.19_long$ObsVar <- interaction(T6.19_long$Obs, T6.19_long$Variable, sep = "_")
# Plot begge variabler som separate søjler i ét diagram
ggplot(T6.19_long, aes(x = Obs, y = Value, fill = Gender)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), aes(group = Variable)) +
labs(
title = "Snout Length og Weight pr. observation",
x = "Observation", y = "Værdi"
) +
scale_fill_manual(values = c("Female" = "#F8766D", "Male" = "#619CFF")) +
theme_minimal()
library(dplyr)
library(tidyr)
library(ggplot2)
# Beregn gennemsnit for hver kombination af variabel og køn
T6.19_means <- T6.19 %>%
group_by(Gender) %>%
summarise(
Snout = mean(`Snout Vent Length (cm)`),
Weight = mean(`Weight (kg)`)
) %>%
pivot_longer(cols = c(Snout, Weight), names_to = "Variable", values_to = "Mean")
# Plot
ggplot(T6.19_means, aes(x = Gender, y = Mean, fill = Variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Gennemsnitlig Snout Length og Weight fordelt på køn",
x = "Køn", y = "Gennemsnitlig værdi"
) +
scale_fill_manual(values = c("Snout" = "#619CFF", "Weight" = "#F8766D")) +
theme_minimal()
# Scatterplot of length and weight given gender=female
## Scatterplot: Females only
T6.19_female <- subset(T6.19, Gender == "Female")
plot(T6.19_female$`Snout Vent Length (cm)`, T6.19_female$`Weight (kg)`,
xlab = expression("Snout Vent Length (cm) x"[1]),
ylab = expression("Weight (kg) x"[2]),
main = "Scatterplot of Female Anacondas",
pch = 19, col = "darkred")
## Scatterplot: Males only
T6.19_male <- subset(T6.19, Gender == "Male")
plot(T6.19_male$`Snout Vent Length (cm)`, T6.19_male$`Weight (kg)`,
xlab = expression("Snout Vent Length (cm) x"[1]),
ylab = expression("Weight (kg) x"[2]),
main = "Scatterplot of Male Anacondas",
pch = 19, col = "darkblue")
plot(T6.19$`Snout Vent Length (cm)`, T6.19$`Weight (kg)`,
xlab = expression("Snout Vent Length (cm) x"[1]),
ylab = expression("Weight (kg) x"[2]),
main = "Scatterplot by Gender",
pch = 19,
col = ifelse(T6.19$Gender == "Female", "darkred", "darkblue"))
legend("topleft", legend = c("Female", "Male"),
col = c("darkred", "darkblue"), pch = 19)
#Mean vector
print(colMeans(T6.19_numerical, na.rm = TRUE), digits = 5)
# colMeans of T6.19 where gender=female
# Column means for females
T6.19_female <- subset(T6.19, Gender == "Female")
T6.19_female_numerical <- T6.19_female[, 1:2]
print(colMeans(T6.19_female_numerical, na.rm = TRUE), digits = 5)
# colMeans of T6.19 where gender=male
# Column means for males
T6.19_male <- subset(T6.19, Gender == "Male")
T6.19_male_numerical <- T6.19_male[, 1:2]
print(colMeans(T6.19_male_numerical, na.rm = TRUE), digits = 5)
#correlation matrix
print(cor(T6.19_numerical))
pairs(T6.19[, 1:2],
main = "Scatterplot Matrix: Length and Weight",
pch = 21,
bg = c("lightpink", "lightblue")[T6.19$Gender])
#pairs(T6.19_numerical, diag.panel = panel.boxplot, labels = "")
pairs(T6.19_numerical,
diag.panel = panel.boxplot,
labels = c("Snout Length", "Weight"),
main = "Scatterplot Matrix: Length and Weight")
# Calculate correlation coefficient
cat("Correlation coefficient:", cor(T6.19$"Snout Vent Length (cm)", T6.19$"Weight (kg)"), "\n")
# Calculate correlation coefficient
cat("Correlation coefficient:", cor(T6.19$"Weight (kg)", T6.19$"Snout Vent Length (cm)"), "\n")
library(tidyr)
library(dplyr)
library(ggplot2)
# Tilføj Gender label
gender <- c(rep("Female", 5), rep("Male", 5))
ID <- factor(paste0("Obs", 1:10), levels = paste0("Obs", 1:10))
# ---- SNOUT ----
df_snout <- data.frame(
ID = ID,
Gender = gender,
Mean = as.vector(snout_mean),
Treatment = as.vector(snout_treatment),
Residual = as.vector(snout_residual)
) %>%
pivot_longer(cols = c("Mean", "Treatment", "Residual"),
names_to = "Component", values_to = "Value") %>%
mutate(Component = factor(Component, levels = c("Mean", "Treatment", "Residual")))
